{"version":3,"sources":["C:/myWork/projects/fp-intro/config.json","C:/myWork/projects/fp-intro/src/$_gendir lazy","C:/myWork/projects/fp-intro/src/app/app.component.css","C:/myWork/projects/fp-intro/src/app/app.component.html","C:/myWork/projects/fp-intro/src/app/app.component.ts","C:/myWork/projects/fp-intro/src/app/app.http.service.ts","C:/myWork/projects/fp-intro/src/app/app.ls.service.ts","C:/myWork/projects/fp-intro/src/app/app.module.ts","C:/myWork/projects/fp-intro/src/app/slides/applicatives.component.html","C:/myWork/projects/fp-intro/src/app/slides/applicatives.component.ts","C:/myWork/projects/fp-intro/src/app/slides/category.component.html","C:/myWork/projects/fp-intro/src/app/slides/category.component.ts","C:/myWork/projects/fp-intro/src/app/slides/compose.component.html","C:/myWork/projects/fp-intro/src/app/slides/compose.component.ts","C:/myWork/projects/fp-intro/src/app/slides/currying.component.html","C:/myWork/projects/fp-intro/src/app/slides/currying.component.ts","C:/myWork/projects/fp-intro/src/app/slides/function.component.html","C:/myWork/projects/fp-intro/src/app/slides/function.component.ts","C:/myWork/projects/fp-intro/src/app/slides/functors.component.html","C:/myWork/projects/fp-intro/src/app/slides/functors.component.ts","C:/myWork/projects/fp-intro/src/app/slides/hof.component.html","C:/myWork/projects/fp-intro/src/app/slides/hof.component.ts","C:/myWork/projects/fp-intro/src/app/slides/lambda.component.html","C:/myWork/projects/fp-intro/src/app/slides/lambda.component.ts","C:/myWork/projects/fp-intro/src/app/slides/mapreduce.component.html","C:/myWork/projects/fp-intro/src/app/slides/mapreduce.component.ts","C:/myWork/projects/fp-intro/src/app/slides/monads.component.html","C:/myWork/projects/fp-intro/src/app/slides/monads.component.ts","C:/myWork/projects/fp-intro/src/app/slides/paradigm.component.html","C:/myWork/projects/fp-intro/src/app/slides/paradigm.component.ts","C:/myWork/projects/fp-intro/src/app/slides/pure.functions.component.html","C:/myWork/projects/fp-intro/src/app/slides/pure.functions.component.ts","C:/myWork/projects/fp-intro/src/app/slides/slides.component.css","C:/myWork/projects/fp-intro/src/environments/environment.ts","C:/myWork/projects/fp-intro/src/main.ts"],"names":[],"mappings":";;;;;AAAA,kBAAkB,QAAQ,uDAAuD,oBAAoB,8HAA8H,gBAAgB,cAAc,mDAAmD,sBAAsB,wHAAwH,gBAAgB,cAAc,oD;;;;;;;ACAhe;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA,2CAA4C,qBAAqB,sBAAsB,oCAAoC,gCAAgC,oCAAoC,KAAK,wBAAwB,0BAA0B,2BAA2B,KAAK;;AAEtR;;;AAGA;AACA,2C;;;;;;;ACXA,s9D;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACO;AACb;AACW;AAQ/C,IAAa,YAAY;IAIvB,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;IAC9C,CAAC;IAED,+BAAQ,GAAR;QACE,qDAAiB,CAAC;YAChB,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,SAAS;YACrB,eAAe,EAAE,MAAM;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,qCAAc,GAAd;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kCAAkC,GAAG,MAAM,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CACjC,UAAC,GAAG,IAAO,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,EACtB,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAC9B,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN,UAAO,IAAY;QAAnB,iBAQC;QAPC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kCAAkC,GAAG,MAAM,CAAC;QACrE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CACjC,UAAC,GAAG,IAAO,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACvC,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CACzB,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACH;AAAA;AAtCa,YAAY;IANxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;yDAMiC,sEAAW,oBAAX,sEAAW;GAJjC,YAAY,CAsCzB;AAtCyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXkB;AAE0B;AACxB;AACA;AACR;AAGrC,IAAa,WAAW;IAEpB,qBAAoB,IAAgB,EACxB,SAAoB;QADZ,SAAI,GAAJ,IAAI,CAAY;QACxB,cAAS,GAAT,SAAS,CAAW;IAChC,CAAC;IAED,yBAAG,GAAH,UAAI,GAAW;QAAf,iBAuBC;QAtBG,MAAM,CAAC,IAAI,mEAAU,CAAC,kBAAQ;YAC1B,oBAAoB;YACpB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAClD,UAAC,GAAG;oBACA,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC/B,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC,EACD,UAAC,GAAsB;oBACnB,QAAQ,CAAC,KAAK,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC;gBAC5C,CAAC,EACD;oBACI,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC,CACJ;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,kBAAC;AAAD,CAAC;AA9BY,WAAW;IADvB,yEAAU,EAAE;yDAGiB,wEAAU,oBAAV,wEAAU,sDACb,kEAAS,oBAAT,kEAAS;GAHvB,WAAW,CA8BvB;AA9BuB;;;;;;;;;;;;;;;;;;;;;ACRmB;AAG3C,IAAa,SAAS;IAEpB;IACA,CAAC;IAEM,yBAAK,GAAZ,UAAa,GAAG,EAAE,GAAG;QACnB,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAEM,4BAAQ,GAAf,UAAgB,GAAG;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,oCAAoC;QACpC,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAEH,gBAAC;AAAD,CAAC;AAfY,SAAS;IADrB,yEAAU,EAAE;;GACA,SAAS,CAerB;AAfqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHoC;AACQ;AACV;AACf;AACc;AAEN;AACJ;AACE;AACiB;AACJ;AACI;AACA;AACW;AACrB;AACK;AACK;AACF;AACC;AACQ;AACZ;AA8B3D,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IA5BrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,qFAAiB;YACjB,iFAAe;YACf,sFAAiB;YACjB,sFAAiB;YACjB,iGAAsB;YACtB,4EAAY;YACZ,iFAAW;YACX,sFAAiB;YACjB,oFAAgB;YAChB,qFAAgB;YAChB,6FAAoB;YACpB,iFAAc;SACf;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,8EAAgB;YAChB,6EAAkB;SACnB;QACD,SAAS,EAAE;YACT,sEAAW;YACX,kEAAS;SACV;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;AClDtB,uoD;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAQlD,IAAa,oBAAoB;IAO7B,8BAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,uCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,mBAAmB,EAAE;YACzC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,yCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,sCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,kCAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IACL;AAAA;AA3Ca,oBAAoB;IANhC,wEAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,0FAA4C;QAC5C,mFAAqC;KACxC,CAAC;yDASmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAR/B,oBAAoB,CA2CjC;AA3CiC;;;;;;;;;ACZjC,moC;;;;;;;;;;;;;;;;ACA0C;AAW1C,IAAa,iBAAiB;IAA9B;IAEA;IAAA;AAAA;AAFa,iBAAiB;IAN7B,wEAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,sFAAwC;QACxC,mFAAqC;KACxC,CAAC;GAEW,iBAAiB,CAE9B;AAF8B;;;;;;;;ACX9B,ylC;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAQlD,IAAa,gBAAgB;IAOzB,0BAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,mCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,WAAW,EAAE;YACjC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,qCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,kCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,8BAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IACL;AAAA;AA3Ca,gBAAgB;IAN5B,wEAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,qFAAuC;QACvC,mFAAqC;KACxC,CAAC;yDASmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAR/B,gBAAgB,CA2C7B;AA3C6B;;;;;;;;;ACZ7B,2mBAA2mB,gOAAgO,gEAAgE,yEAAyE,+DAA+D,IAAI,ygBAAygB,4LAA4L,4MAA4M,wR;;;;;;;;;;;;;;;;ACA93D;AAY1C,IAAa,iBAAiB;IAA9B;IA8CA;IAAA;AAAA;AA9Ca,iBAAiB;IAN7B,wEAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,sFAAwC;QACxC,mFAAqC;KACxC,CAAC;GAEW,iBAAiB,CA8C9B;AA9C8B;;;;;;;;ACZ9B,wlC;;;;;;;;;;;;;;;;ACA0C;AAW1C,IAAa,iBAAiB;IAA9B;IAEA;IAAA;AAAA;AAFa,iBAAiB;IAN7B,wEAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,sFAAwC;QACxC,mFAAqC;KACxC,CAAC;GAEW,iBAAiB,CAE9B;AAF8B;;;;;;;;ACX9B,+mE;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAQlD,IAAa,gBAAgB;IAOzB,0BAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,mCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,eAAe,EAAE;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,qCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,kCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,8BAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IACL;AAAA;AA3Ca,gBAAgB;IAN5B,wEAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,sFAAwC;QACxC,mFAAqC;KACxC,CAAC;yDASmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAR/B,gBAAgB,CA2C7B;AA3C6B;;;;;;;;;ACZ7B,ogC;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAQlD,IAAa,YAAY;IAQrB,sBAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,WAAW,EAAE;YACjC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,8BAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,0BAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAEL;AAAA;AA7Ca,YAAY;IANxB,wEAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,iFAAmC;QACnC,mFAAqC;KACxC,CAAC;yDAUmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAT/B,YAAY,CA6CzB;AA7CyB;;;;;;;;;ACZzB,kwBAAkwB,+BAA+B,6BAA6B,mRAAmR,0bAA0b,wCAAwC,0D;;;;;;;;;;;;;;;;ACAzgD;AAW1C,IAAa,eAAe;IAA5B;IAEA;IAAA;AAAA;AAFa,eAAe;IAN3B,wEAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,oFAAsC;QACtC,mFAAqC;KACxC,CAAC;GAEW,eAAe,CAE5B;AAF4B;;;;;;;;ACX5B,2xO;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACQ;AACF;AACZ;AACc;AAQlD,IAAa,WAAW;IAYpB,qBAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,8BAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;QACV,2DAAuB,CAAC,cAAc,EAAE;YACpC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,EAA/B,CAA+B,CAC3C,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;QACV,2DAAuB,CAAC,iBAAiB,EAAE;YACvC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,EAAlC,CAAkC,CAC9C,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,gCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,6BAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,yBAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IACD,6BAAO,GAAP;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CACtC,UAAC,GAAG,IAAK,YAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,EAApC,CAAoC,CAChD,CAAC;IACN,CAAC;IACD,gCAAU,GAAV;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CACzC,UAAC,GAAG,IAAK,YAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,GAAG,CAAC,EAAvC,CAAuC,CACnD,CAAC;IACN,CAAC;IACL;AAAA;AAtEa,WAAW;IANvB,wEAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,uFAAyC;QACzC,mFAAqC;KACxC,CAAC;yDAcmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAb/B,WAAW,CAsExB;AAtEwB;;;;;;;;;ACZxB,20D;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAQlD,IAAa,cAAc;IAOvB,wBAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,aAAa,EAAE;YACnC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,gCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,4BAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IACL;AAAA;AA3Ca,cAAc;IAN1B,wEAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,oFAAsC;QACtC,mFAAqC;KACxC,CAAC;yDASmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAR/B,cAAc,CA2C3B;AA3C2B;;;;;;;;;ACZ3B,kkE;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AACE;AACd;AACc;AAWlD,IAAa,iBAAiB;IAO1B,2BAAoB,WAAwB,EAChC,MAAoB;QADZ,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAc;QAJhC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,gBAAgB,EAAE;YACtC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,sCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,mCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,+BAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAED,mCAAO,GAAP;QACI,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK;YACtC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL;AAAA;AAjDa,iBAAiB;IAN7B,wEAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,sFAAwC;QACxC,mFAAqC;KACxC,CAAC;yDASmC,sEAAW,oBAAX,sEAAW,sDACxB,oEAAY,oBAAZ,oEAAY;GARvB,iBAAiB,CAiD9B;AAjD8B;;;;;;;;;ACf9B,6vCAA6vC,MAAM,MAAM,MAAM,4NAA4N,MAAM,MAAM,MAAM,yBAAyB,+BAA+B,MAAM,MAAM,MAAM,k4B;;;;;;;;;;;;;;;;;;;;;;;;;ACA7hD;AACQ;AACF;AACZ;AACc;AAQlD,IAAa,sBAAsB;IAQ/B,gCAAoB,WAAwB,EACxB,MAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAc;QAJxC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAInB,IAAI,CAAC,OAAO,GAAS,kDAAe,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,2DAAuB,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CACjD,UAAC,GAAG,IAAK,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,EAA3B,CAA2B,CACvC,CAAC;QACN,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,2CAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,6DAA0B,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAQ,+DAA4B,CAAC,CAAC;IACnF,CAAC;IAED,wCAAO,GAAP,UAAQ,MAAM;QAAd,iBAQC;QAPG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/B,UAAC,GAAG,IAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC1B,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAC3B,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,oCAAG,GAAH;QAAA,iBAIC;QAHG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClC,UAAC,GAAG,IAAK,YAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAEL;AAAA;AA7Ca,sBAAsB;IANlC,wEAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,4FAA8C;QAC9C,mFAAqC;KACxC,CAAC;yDAUmC,sEAAW,oBAAX,sEAAW,sDAChB,oEAAY,oBAAZ,oEAAY;GAT/B,sBAAsB,CA6CnC;AA7CmC;;;;;;;;;ACZnC;AACA;;;AAGA;AACA,mCAAoC,sBAAsB,yBAAyB,wBAAwB,yBAAyB,KAAK,iBAAiB,sBAAsB,yBAAyB,wBAAwB,yBAAyB,KAAK,oBAAoB,kBAAkB,EAAE,kBAAkB,oBAAoB,0BAA0B,yBAAyB,KAAK,iBAAiB,uBAAuB,KAAK,qBAAqB,oCAAoC,gCAAgC,oCAAoC,KAAK,mBAAmB,0BAA0B,sBAAsB,kCAAkC,2CAA2C,sBAAsB,KAAK,eAAe,qBAAqB,KAAK,oBAAoB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8BAA8B,KAAK,wBAAwB,0BAA0B,sBAAsB,kCAAkC,2CAA2C,8BAA8B,MAAM,2BAA2B,0BAA0B,sBAAsB,kCAAkC,2CAA2C,8BAA8B,MAAM,YAAY,qBAAqB,KAAK,gBAAgB,qBAAqB,sBAAsB,KAAK,4BAA4B,+BAA+B,KAAK,oBAAoB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8BAA8B,KAAK,aAAa,qBAAqB,sBAAsB,KAAK,gBAAgB,qBAAqB,sBAAsB,KAAK,qBAAqB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8BAA8B,KAAK,gBAAgB,+BAA+B,4BAA4B,KAAK,mBAAmB,oCAAoC,2BAA2B,KAAK,oBAAoB,wBAAwB,MAAM,uBAAuB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8BAA8B,KAAK,cAAc,wBAAwB,MAAM,oBAAoB,+BAA+B,KAAK,sBAAsB,sBAAsB,KAAK,mBAAmB,sBAAsB,KAAK,mBAAmB,sBAAsB,KAAK,mBAAmB,sBAAsB,KAAK,YAAY,sBAAsB,KAAK,iBAAiB,sBAAsB,KAAK,eAAe,sBAAsB,KAAK,gBAAgB,sBAAsB,KAAK,yBAAyB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8BAA8B,KAAK;;AAEr/F;;;AAGA;AACA,2C;;;;;;;;ACXA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["module.exports = {\"gist\":{\"apiUrl\":\"https://gist.githubusercontent.com/divagar/\"},\"jsEditorOptions\":{\"theme\":\"vs-dark\",\"language\":\"javascript\",\"autoIndent\":true,\"fontSize\":\"20px\",\"fontWeight\":400,\"lineNumbers\":\"off\",\"minimap\":{\"enabled\":false},\"scrollbar\":{\"vertical\":\"hidden\",\"verticalScrollbarSize\":\"1px\"}},\"htmlEditorOptions\":{\"theme\":\"vs-dark\",\"language\":\"html\",\"autoIndent\":true,\"fontSize\":\"20px\",\"fontWeight\":400,\"lineNumbers\":\"off\",\"minimap\":{\"enabled\":false},\"scrollbar\":{\"vertical\":\"hidden\",\"verticalScrollbarSize\":\"1px\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/config.json\n// module id = ../../../../../config.json\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".slide_intro img {\\r\\n    width: 200px;\\r\\n    height: 175px;\\r\\n    background: none !important;\\r\\n    border: none !important;\\r\\n    margin-top: 10px !important;\\r\\n}\\r\\n.slide_intro div p {\\r\\n    text-align: right;\\r\\n    font-style: italic;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"reveal\\\">\\n  <div class=\\\"slides\\\">\\n\\n    <section class=\\\"slide_intro\\\">\\n      <div class='intro'>\\n        <img src=\\\"assets/images/fp_js.jpg\\\">\\n      </div>\\n      <div>\\n        <h3>Introduction to Functional Programming</h3>\\n        <br/>\\n        <p>Divagar & Jenny</p>\\n      </div>\\n    </section>\\n\\n    <section>\\n      <div>\\n        <h3 class='yellow'>Composition\\n          <br/>Abstraction</h3>\\n      </div>\\n    </section>\\n\\n    <section app-paradigm class='slide_paradigm'>\\n    </section>\\n\\n    <section>\\n      <div>\\n        <h3 class='yellow'>Theoretical Models of\\n          <br/>Funcational Programming</h3>\\n        <p>Lambda Calculus & Category Theory</p>\\n      </div>\\n    </section>\\n\\n    <section app-lambda data-state='slide_lambda' class='slide_lambda'>\\n    </section>\\n\\n    <section app-cat data-state='slide_cat' class='slide_cat'>\\n    </section>\\n\\n    <section app-fn data-state='slide_fn' class='slide_fn'>\\n    </section>\\n\\n    <section app-pf class='slide_pf'>\\n    </section>\\n\\n    <section app-hof class='slide_hof'>\\n    </section>\\n\\n    <section app-mr class='slide_mr'>\\n    </section>\\n\\n    <section app-curry class='slide_curry'>\\n    </section>\\n\\n    <section app-com class='slide_com'>\\n    </section>\\n\\n    <section>\\n      <div>\\n        <h3 class='yellow'>Type Composition</h3>\\n        <p>\\n          We will learn this via FP design pattern like Functor, Applicative and Monad\\n        </p>\\n      </div>\\n    </section>\\n\\n    <section app-functor class='slide_functor'>\\n    </section>\\n\\n    <section app-applicative class='slide_applicative'>\\n    </section>\\n\\n    <section app-monad class='slide_monad'>\\n    </section>\\n\\n    <section>\\n      <p>Funcational programming offers higher order abstraction, which drive significantly greater re-use and clean code.\\n      </p>\\n      <h3 class='yellow'>The development world is becoming more functional. Learn it.</h3>\\n    </section>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from './app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../config.json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  gistUrl: string;\r\n\r\n  constructor(private httpService: HttpService) {\r\n    this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n  }\r\n\r\n  ngOnInit() {\r\n    Reveal.initialize({\r\n      controls: false,\r\n      progress: true,\r\n      history: true,\r\n      center: true,\r\n      transition: 'concave',\r\n      transitionSpeed: 'fast'\r\n    });\r\n\r\n    this.getConsoleCode();\r\n  }\r\n\r\n  getConsoleCode() {\r\n    var url = this.gistUrl + 'b4458e960e2cde5d54e3337b54601126' + '/raw';\r\n    this.httpService.get(url).subscribe(\r\n      (val) => { eval(val) },\r\n      (err) => { console.log(err) }\r\n    );\r\n  }\r\n\r\n  fpEval(code: string) {\r\n    var url = this.gistUrl + 'b4458e960e2cde5d54e3337b54601126' + '/raw';\r\n    return new Promise((resolve, reject) => {\r\n      this.httpService.get(url).subscribe(\r\n        (val) => { resolve(eval(val + code)); },\r\n        (err) => { reject(err) }\r\n      );\r\n    })\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport { Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LSService } from './app.ls.service';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient,\r\n        private lsService: LSService) {\r\n    }\r\n\r\n    get(url: string): Observable<string> {\r\n        return new Observable(observer => {\r\n            //try to get from ls\r\n            let lsVal = this.lsService.retrieve(url);\r\n            if (lsVal == null) {\r\n                this.http.get(url, { responseType: 'text' }).subscribe(\r\n                    (val) => {\r\n                        this.lsService.store(url, val);\r\n                        observer.next(val);\r\n                    },\r\n                    (err: HttpErrorResponse) => {\r\n                        observer.error(\"Error occured. \" + err);\r\n                    },\r\n                    () => {\r\n                        observer.complete();\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                observer.next(lsVal);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/app.http.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LSService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public store(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  }\r\n\r\n  public retrieve(key) {\r\n    let val = JSON.parse(localStorage.getItem(key));\r\n    //if (!val) throw 'No value found!';\r\n    return val;\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/app.ls.service.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\n\nimport { HttpService } from './app.http.service';\nimport { LSService } from './app.ls.service';\nimport { AppComponent } from './app.component';\nimport { ParadigmComponent } from './slides/paradigm.component';\nimport { LambdaComponent } from './slides/lambda.component';\nimport { CategoryComponent } from './slides/category.component';\nimport { FunctionComponent } from './slides/function.component';\nimport { PureFunctionsComponent } from './slides/pure.functions.component';\nimport { HOFComponent } from './slides/hof.component';\nimport { MRComponent } from './slides/mapreduce.component';\nimport { CurryingComponent } from './slides/currying.component';\nimport { ComposeComponent } from './slides/compose.component';\nimport { FunctorComponent } from './slides/functors.component';\nimport { ApplicativeComponent } from './slides/applicatives.component';\nimport { MonadComponent } from './slides/monads.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ParadigmComponent,\n    LambdaComponent,\n    CategoryComponent,\n    FunctionComponent,\n    PureFunctionsComponent,\n    HOFComponent,\n    MRComponent,\n    CurryingComponent,\n    ComposeComponent,\n    FunctorComponent,\n    ApplicativeComponent,\n    MonadComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MonacoEditorModule\n  ],\n  providers: [\n    HttpService,\n    LSService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/app.module.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Applicatives</h3>\\r\\n        <p>\\r\\n            Applicatives apply a wrapped function to a wrapped value\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Our values are wrapped in a container, just like Functors\\r\\n            <br> and our functions are wrapped in a container too!</p>\\r\\n        <div class='applicativeWrapper'>\\r\\n            <div class='fnBox'>\\r\\n                <img src=\\\"assets/images/functor_value_wrapper.png\\\">\\r\\n            </div>\\r\\n            <div class='fnBox'>\\r\\n                <img src=\\\"assets/images/applicative_fn_wrapper.png\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Applicatives | Behind the scenes</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/applicative_in_action.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_applicative'>\\r\\n    <div>\\r\\n        <h3></h3>\\r\\n        <p class='yellow'>Applicatives | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/applicatives.component.html\n// module id = ../../../../../src/app/slides/applicatives.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-applicative]',\r\n    templateUrl: './applicatives.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class ApplicativeComponent {\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_applicative', function () {\r\n            that.initEditor();\r\n            that.getCode('40ff93efe1cbcf320e36be46d4fb7bff').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/applicatives.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Category Theory</h3>\\r\\n        <p>\\r\\n            How\\r\\n            <i>things</i> compose\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>What is category ?</h3>\\r\\n        <img class='categoryImg' src=\\\"assets/images/category_1.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Category' Rules</h3>\\r\\n        <p>Identity<br/>\\r\\n        Composition<br/>\\r\\n        Associativity</p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Identity</h3>\\r\\n        <img class='categoryImgI' src=\\\"assets/images/category_identity.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Composition</h3>\\r\\n        <img class='categoryImgC' src=\\\"assets/images/category_composition.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Associativity</h3>\\r\\n        <img class='categoryImgA' src=\\\"assets/images/category_associativity.png\\\">\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/category.component.html\n// module id = ../../../../../src/app/slides/category.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-cat]',\r\n    templateUrl: './category.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class CategoryComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/category.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Function Composition</h3>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p class='yellow'>Function composition is simply stringing functions together. We feed the result of one function to the input of another.</p>\\r\\n        <img class='pfImg' src=\\\"assets/images/fun_comp.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_com'>\\r\\n    <div>\\r\\n        <p class='yellow'>Function Composition | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/compose.component.html\n// module id = ../../../../../src/app/slides/compose.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-com]',\r\n    templateUrl: './compose.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class ComposeComponent {\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_com', function () {\r\n            that.initEditor();\r\n            that.getCode('4c3b68f11e404db9431bafca17644e7d').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/compose.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Curried Function</h3>\\r\\n        <p>A function that will return a new function\\r\\n            <br/>until it receives all its arguments</p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_curry'>\\r\\n    <div>\\r\\n        <h3></h3>\\r\\n        <p class='yellow'>Currying | Benefits</p>\\r\\n        <p class=\\\"curry_p\\\">Make new functions just by giving our base functions</p>\\r\\n        <pre class=\\\"curryCode\\\">\\r\\n                        <code class=\\\"javascript\\\">\\r\\n                                let curry = require('lodash/curry');\\r\\n                                \\r\\n                                let match = curry((what, str) => str.match(what))\\r\\n                                \\r\\n                                let hasSpaces = match(/\\\\s+/g);\\r\\n                                hasSpaces(\\\"Hello World\\\"));\\r\\n            \\r\\n                                let hasColon=match(/;+/g)\\r\\n                                hasColon(\\\"Hello World;\\\");\\r\\n                        </code>\\r\\n            </pre>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_curry'>\\r\\n    <div>\\r\\n        <h3></h3>\\r\\n        <p class='yellow'>Currying | Benefits</p>\\r\\n        <p class=\\\"curry_p\\\">Transform any function that works on single elements into a function that works on arrays </p>\\r\\n        <pre class=\\\"curryCode\\\">\\r\\n                                <code class=\\\"javascript\\\">\\r\\n                                        let curry = require('lodash/curry');\\r\\n                                        let add = curry ((x, y) => x + y)\\r\\n                                        \\r\\n                                        let increment = add(1);\\r\\n                                        let myArray = [10, 20, 30, 40, 50]\\r\\n                                        \\r\\n                                        let newArray = myArray.map(increment);\\r\\n                                        \\r\\n                                        console.log(newArray)\\r\\n                                        //[ 11, 21, 31, 41, 51 ] \\r\\n                                </code>\\r\\n                    </pre>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/currying.component.html\n// module id = ../../../../../src/app/slides/currying.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport { AppComponent } from '../app.component';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-curry]',\r\n    templateUrl: './currying.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class CurryingComponent {\r\n\r\n    /*\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_curry', function () {\r\n            that.initEditor();\r\n            that.getCode('67ae60ff62f34216b3a88b01623ba291').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n    */\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/currying.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>What is a Function ?</h3>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3>Math definition</h3>\\r\\n        <p class='yellow'>A function relates each element of a set with exactly one element of another set and is denoted as f: X -> Y\\r\\n        </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <div class='fnWrapper'>\\r\\n            <div class='fn'>\\r\\n                <img src=\\\"assets/images/function-sets.svg\\\">\\r\\n            </div>\\r\\n            <div class='fn'>\\r\\n                <img src=\\\"assets/images/relation-not-function.gif\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <p>'One-to-many' is not allowed, but 'many-to-one' is allowed</p>\\r\\n        <div class='fnWrapper'>\\r\\n            <div class='fnBox'>\\r\\n                <img src=\\\"assets/images/function-sets-1-2.gif\\\">\\r\\n            </div>\\r\\n            <div class='fnBox'>\\r\\n                <img src=\\\"assets/images/function-sets-2-1.gif\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/function.component.html\n// module id = ../../../../../src/app/slides/function.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-fn]',\r\n    templateUrl: './function.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class FunctionComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/function.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Functors</h3>\\r\\n        <p>\\r\\n            A functor is a <i>type</i> you can map over.<br/>\\r\\n            Functors apply a function to a wrapped value\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Let' take a simple value</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>We know how to apply a function to this value</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value_fun.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Introducing container</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value_wrapper.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>You can’t apply a normal function to the container</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value_wrapper_normal_fun.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>You need Map function</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value_wrapper_map.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Map | Behind the scenes</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/functor_value_wrapper_map_in_detail.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_functor'>\\r\\n    <div>\\r\\n        <h3></h3>\\r\\n        <p class='yellow'>Functors | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/functors.component.html\n// module id = ../../../../../src/app/slides/functors.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-functor]',\r\n    templateUrl: './functors.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class FunctorComponent {\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_functor', function () {\r\n            that.initEditor();\r\n            that.getCode('acb11e073f0270d8cd2be5a931dfe23a').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/functors.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Higher Order Function</h3>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_hof'>\\r\\n    <div>\\r\\n        <p class='yellow'>Functions which take functions as input or return functions as output</p>\\r\\n        <p class='hop_sub_p'>A good mental model would be: <br/>patterns in code = functions <br/>patterns in functions = higher order functions </p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/hof.component.html\n// module id = ../../../../../src/app/slides/hof.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-hof]',\r\n    templateUrl: './hof.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class HOFComponent {\r\n\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_hof', function () {\r\n            that.initEditor();\r\n            that.getCode('124de8bf19269466819dccc6c11fec75').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/hof.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Lambda Calculus λ</h3>\\r\\n        <p>\\r\\n            Universal model of computation based on function application\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n        <div>\\r\\n            <h3 class='yellow'>Lambda Calculus features</h3>\\r\\n            <p>Functions are first-class<br/>\\r\\n            Anonymous Functions<br/>\\r\\n            Unary Functions</p>\\r\\n        </div>\\r\\n    </section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Functions are first-class</h3>\\r\\n        <p>functions can be used as inputs to other functions, and functions can return functions</p>\\r\\n        <pre><code class=\\\"javascript\\\">\\r\\n                let add2 = (x) => x + 2;\\r\\n                (f) => f();\\r\\n                (x) => f;\\r\\n            </code></pre>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Anonymous Functions</h3>\\r\\n        <p>Functions are always anonymous</p>\\r\\n        <pre><code class=\\\"javascript\\\">\\r\\n            let add2 = (x) => x + 2;</code></pre>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Unary Functions</h3>\\r\\n        <p>Functions in lambda calculus only accept a single input.\\r\\n            <br/> If you need more than one parameter, the function will take one input and return a new function that takes the\\r\\n            next.\\r\\n        </p>\\r\\n        <pre><code class=\\\"javascript\\\">\\r\\n                (x, y) => x + y;\\r\\n                (x) => (y) => x + y;\\r\\n            </code></pre>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/lambda.component.html\n// module id = ../../../../../src/app/slides/lambda.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-lambda]',\r\n    templateUrl: './lambda.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class LambdaComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/lambda.component.ts","module.exports = \"<!-- <section data-state='slide_mr'>\\r\\n    <div>\\r\\n        <p class='yellow'>Higher Order Function | Example</p>\\r\\n    </div>\\r\\n    <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n    </ngx-monaco-editor>\\r\\n</section> -->\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3>Map</h3>\\r\\n        <p class='yellow'>A map fn takes a list and a function as input. The function is applied to every element of the list generating an\\r\\n            output list.\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/map.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate_1.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange_1.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon_1.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon_1.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_mr_map'>\\r\\n    <div>\\r\\n        <p class='yellow'>Map | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode_map\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run_map()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput_map\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3>Reduce (fold)</h3>\\r\\n        <p class='yellow'>A reduce fn takes a list, an initial value and a fn as input and The function is applied to every element accumulating\\r\\n            the output in each step.\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapperReducefn\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/fruit-bowl.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/reduce.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<section>\\r\\n    <div class=\\\"mrWrapper\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/pomegranate.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/orange.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/watermelon.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/lemon.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapperReducefn\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/fruit-bowl.png\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/reduce.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mrWrapperReducefnOut\\\">\\r\\n        <div class=\\\"mrBox\\\">\\r\\n        </div>\\r\\n        <div class=\\\"mrBox\\\">\\r\\n            <img src=\\\"assets/images/fruit-salad.png\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_mr_reduce'>\\r\\n    <div>\\r\\n        <p class='yellow'>Reduce | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode_reduce\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run_reduce()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput_reduce\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/mapreduce.component.html\n// module id = ../../../../../src/app/slides/mapreduce.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport { AppComponent } from '../app.component';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-mr]',\r\n    templateUrl: './mapreduce.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class MRComponent {\r\n\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    mainCode_map: string;\r\n    mainCode_reduce: string;\r\n    consoleOutput: string;\r\n    consoleOutput_map: string;\r\n    consoleOutput_reduce: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_mr', function () {\r\n            that.initEditor();\r\n            that.getCode('962e76ccef7dd8703c1365fa9388124e').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n        Reveal.addEventListener('slide_mr_map', function () {\r\n            that.initEditor();\r\n            that.getCode('d9ec1b0a2274af389e53dc0cc9f526a2').then(\r\n                (val) => that.mainCode_map = String(val)\r\n            );\r\n        }, false);\r\n        Reveal.addEventListener('slide_mr_reduce', function () {\r\n            that.initEditor();\r\n            that.getCode('52cad12fa78bd6cc91ec8946b106ea0e').then(\r\n                (val) => that.mainCode_reduce = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n    run_map() {\r\n        this.appCom.fpEval(this.mainCode_map).then(\r\n            (val) => this.consoleOutput_map = String(val)\r\n        );\r\n    }\r\n    run_reduce() {\r\n        this.appCom.fpEval(this.mainCode_reduce).then(\r\n            (val) => this.consoleOutput_reduce = String(val)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/mapreduce.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Monads</h3>\\r\\n        <p>\\r\\n            Monads apply a function that returns a wrapped value to a wrapped value.\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>Let's see an example. Maybe monad</p>\\r\\n        <img class='functorImg' src=\\\"assets/images/monad_maybe.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>\\r\\n            <i>half</i> is a function that only works on even numbers</p>\\r\\n        <img src=\\\"assets/images/monad_half_1.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>If we feed it a wrapped value?</p>\\r\\n        <img src=\\\"assets/images/monad_half_2.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>You need FlatMap a.k.a Bind function</p>\\r\\n        <img class='monadImg' src=\\\"assets/images/monad_in_action.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p>We can chain these calls</p>\\r\\n        <img class='monadImg1' src=\\\"assets/images/monad_example.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_monad'>\\r\\n    <div>\\r\\n        <h3></h3>\\r\\n        <p class='yellow'>Monads | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/monads.component.html\n// module id = ../../../../../src/app/slides/monads.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-monad]',\r\n    templateUrl: './monads.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class MonadComponent {\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_monad', function () {\r\n            that.initEditor();\r\n            that.getCode('ba3f8af8219debfa364a7c6a2fedba94').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/monads.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Programming Paradigm</h3>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p class='yellow'>Classification of various paradigms\\r\\n            <br/> is based a particular style of programming</p>\\r\\n        <img class='pfImg' src=\\\"assets/images/paradigm.png\\\">\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Imperative Programming Paradigm</h3>\\r\\n        <p>\\r\\n            A programming style where computation is expressed as a sequence of statements which change state\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Imperative Programming Paradigm</h3>\\r\\n        <p>\\r\\n            Based on Von Neumann machine with registers and modifiable memory. The memory is manipulated by the program through variables\\r\\n            and assignments\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Imperative Programming Paradigm</h3>\\r\\n        <p>\\r\\n            Order of execution is important and primary control flow are loops, conditions, function (sub-routine or method) calls\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Object-Oriented Programming Paradigm</h3>\\r\\n        <p>\\r\\n            A programming style where computation is expressed as a composition of objects which combine data and code\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Declarative Programming Paradigm</h3>\\r\\n        <p>\\r\\n            A computational model where the problem is described in terms of ‘what’ and not ‘how’\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Funcational Programming Paradigm</h3>\\r\\n        <p>\\r\\n            A programming style where evaluation of expressions are emphasized over execution of commands. <br/>Mutable state is mostly avoided\\r\\n        </p>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/paradigm.component.html\n// module id = ../../../../../src/app/slides/paradigm.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { HttpService } from '../app.http.service';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\ndeclare var hljs: any;\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: '[app-paradigm]',\r\n    templateUrl: './paradigm.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class ParadigmComponent {\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n        private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_paradigm', function () {\r\n            that.initEditor();\r\n            that.getCode('4c3b68f11e404db9431bafca17644e7d').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n\r\n    codeHgl() {\r\n        jQuery('pre code').each(function (i, block) {\r\n            hljs.highlightBlock(block);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/paradigm.component.ts","module.exports = \"<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Pure Function</h3>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <p class='yellow'>A function that, given the same input, will always return the same output and does not have any observable side effect.</p>\\r\\n        <div class='pfnWrapper'>\\r\\n            <div class='pf'>\\r\\n                <img class='pfImg' src=\\\"assets/images/pf.png\\\">\\r\\n            </div>\\r\\n            <pre class='pf'><code class=\\\"javascript\\\">\\r\\n                    let abcd = ['a', 'b', 'c', 'd', 'e']\\r\\n                    console.log(abcd.slice(2,4))\\r\\n                    //[ 'c', 'd' ]\\r\\n                    console.log(abcd)\\r\\n                    //[ 'a', 'b', 'c', 'd', 'e' ]\\r\\n                    console.log(abcd.splice(2,2))\\r\\n                    //[ 'c', 'd' ]\\r\\n                    console.log(abcd)\\r\\n                    //[ 'a', 'b', 'e' ]\\r\\n                </code>\\r\\n            </pre>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n    <div>\\r\\n        <h3 class='yellow'>Properties of Pure fuctions</h3>\\r\\n        <div>\\r\\n            <p class=\\\"pfProperties\\\">\\r\\n                <span class='yellow'>1. Immutability</span>\\r\\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;In Pure FP, X = X + 1 is not possible\\r\\n                <br/><span class='yellow'>2. No side effects</span>\\r\\n                <br/><span class='yellow'>3. Referrential Transparency</span>\\r\\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;let plusOne = (x) => x+1;\\r\\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;plusOne(5) can be replaced by \\\"6\\\"\\r\\n                <br/><span class='yellow'>4. Parallel Code</span>\\r\\n                <br/>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<section data-state='slide_pf'>\\r\\n    <div>\\r\\n        <p class='yellow'>Pure Function | Example</p>\\r\\n    </div>\\r\\n    <div class=\\\"eWrapper\\\">\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditor\\\" [options]=\\\"jsEditorOptions\\\" [(ngModel)]=\\\"mainCode\\\">\\r\\n            </ngx-monaco-editor>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success run\\\" (click)=\\\"run()\\\">Run</button>\\r\\n            <br/>\\r\\n        </div>\\r\\n        <div class=\\\"eBox\\\">\\r\\n            <ngx-monaco-editor class=\\\"mEditorOut\\\" [options]=\\\"htmlEditorOptions\\\" [(ngModel)]=\\\"consoleOutput\\\">\\r\\n            </ngx-monaco-editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/pure.functions.component.html\n// module id = ../../../../../src/app/slides/pure.functions.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HttpService } from '../app.http.service';\r\nimport { AppComponent } from '../app.component';\r\nimport * as Reveal from 'reveal.js';\r\nimport * as appConfig from '../../../config.json';\r\n\r\n@Component({\r\n    selector: '[app-pf]',\r\n    templateUrl: './pure.functions.component.html',\r\n    styleUrls: ['./slides.component.css']\r\n})\r\n\r\nexport class PureFunctionsComponent {\r\n\r\n    gistUrl: string;\r\n    mainCode: string;\r\n    consoleOutput: string;\r\n    jsEditorOptions = {};\r\n    htmlEditorOptions = {};\r\n\r\n    constructor(private httpService: HttpService,\r\n                private appCom: AppComponent) {\r\n        this.gistUrl = (<any>appConfig).gist.apiUrl;\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnInit() {\r\n        var that = this;\r\n        Reveal.addEventListener('slide_pf', function () {\r\n            that.initEditor();\r\n            that.getCode('e2b30c282780abaa7d3d3c3cbe4fee17').then(\r\n                (val) => that.mainCode = String(val)\r\n            );\r\n        }, false);\r\n    }\r\n\r\n    initEditor() {\r\n        this.jsEditorOptions = Object.assign({}, (<any>appConfig).jsEditorOptions);\r\n        this.htmlEditorOptions = Object.assign({}, (<any>appConfig).htmlEditorOptions);\r\n    }\r\n\r\n    getCode(gistId) {\r\n        var url = this.gistUrl + gistId + '/raw';\r\n        return new Promise((resolve, reject) => {\r\n            this.httpService.get(url).subscribe(\r\n                (val) => { resolve(val); },\r\n                (err) => { reject(err) }\r\n            );\r\n        })\r\n    }\r\n\r\n    run() {\r\n        this.appCom.fpEval(this.mainCode).then(\r\n            (val) => this.consoleOutput = String(val)\r\n        );\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/app/slides/pure.functions.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mEditor {\\r\\n    height: 400px;\\r\\n    text-align: left;\\r\\n    font-size: 40px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.mEditorOut {\\r\\n    height: 400px;\\r\\n    text-align: left;\\r\\n    font-size: 40px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.monaco-editor { overflow: hidden; }\\r\\n\\r\\n.btn.run {\\r\\n    float: left;\\r\\n    margin-left: 10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.yellow {\\r\\n    color: #F8DC3D;\\r\\n}\\r\\n\\r\\nsection img {\\r\\n    background: none !important;\\r\\n    border: none !important;\\r\\n    margin-top: 10px !important;\\r\\n}\\r\\n\\r\\n.eWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n    grid-gap: 5px;\\r\\n}\\r\\n\\r\\n.eBox {\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.mrWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[4];\\r\\n        grid-template-columns: repeat(4, 1fr);\\r\\n    grid-auto-rows: 200px;\\r\\n}\\r\\n.mrWrapperReducefn {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 3fr;\\r\\n        grid-template-columns: 1fr 3fr;\\r\\n    grid-auto-rows: 200px; \\r\\n}\\r\\n.mrWrapperReducefnOut {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n    grid-auto-rows: 200px; \\r\\n}\\r\\n.mrBox {\\r\\n    padding: 1px;\\r\\n}\\r\\n.mrBox img {\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n}\\r\\n.mrWrapperReducefn img {\\r\\n    width: auto !important;\\r\\n}\\r\\n\\r\\n.fnWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[2];\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    grid-auto-rows: 150px;\\r\\n}\\r\\n.fn img {\\r\\n    width: 300px;\\r\\n    height: 250px;\\r\\n}\\r\\n.fnBox img {\\r\\n    width: 200px;\\r\\n    height: 190px;\\r\\n}\\r\\n\\r\\n.pfnWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[2];\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    grid-auto-rows: 400px;\\r\\n}\\r\\n\\r\\npre.pf {\\r\\n    width: 100% !important;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n.pfProperties {\\r\\n    text-align: left !important;\\r\\n    margin-left: 250px;\\r\\n}\\r\\n\\r\\n.hop_sub_p {\\r\\n    font-size: 22px; \\r\\n}\\r\\n\\r\\n.curryWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[2];\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    grid-auto-rows: 400px;\\r\\n}\\r\\n.curry_p {\\r\\n    font-size: 25px; \\r\\n}\\r\\n\\r\\n.curryCode {\\r\\n    width: 100% !important;\\r\\n}\\r\\n\\r\\n.categoryImg {\\r\\n    height: 250px;\\r\\n}\\r\\n.categoryImgI {\\r\\n    height: 300px;\\r\\n}\\r\\n.categoryImgC {\\r\\n    height: 350px;\\r\\n}\\r\\n.categoryImgA {\\r\\n    height: 500px;\\r\\n}\\r\\n.pfImg {\\r\\n    height: 500px;\\r\\n}\\r\\n.functorImg {\\r\\n    height: 300px;\\r\\n}\\r\\n.monadImg {\\r\\n    height: 410px;\\r\\n}\\r\\n.monadImg1 {\\r\\n    height: 510px;\\r\\n}\\r\\n.applicativeWrapper {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[2];\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n    grid-auto-rows: 300px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myWork/projects/fp-intro/src/app/slides/slides.component.css\n// module id = ../../../../../src/app/slides/slides.component.css\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/myWork/projects/fp-intro/src/main.ts"],"sourceRoot":"webpack:///"}